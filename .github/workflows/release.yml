name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    concurrency:
      group: release
      cancel-in-progress: false

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.25.x

      - name: Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Get tag info
        id: tag_info
        run: |
          # Get the tag that triggered this workflow
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          echo "Current tag: $CURRENT_TAG"
          echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT

          # Get the previous tag (excluding the current one)
          LAST_TAG=$(git describe --tags --abbrev=0 ${CURRENT_TAG}^ 2>/dev/null || echo "")
          echo "previous_tag=$LAST_TAG" >> $GITHUB_OUTPUT

          if [ -z "$LAST_TAG" ]; then
              echo "No previous tag found"
          else
              echo "Previous tag: $LAST_TAG"
          fi

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v6.0.0
        with:
          github-token: ${{ secrets.RELEASE_TOKEN }}
          git-message: |
            chore(release): {tag} [skip ci]
            - Update changelog
            - Bump version
          preset: "conventionalcommits"
          tag-prefix: "v"
          release-count: 0
          output-file: "docs/reference/changelog.md"
          version-file: "version.json"
          skip-on-empty: "false"
          skip-version-file: "false"
          skip-git-pull: "true"
          create-summary: "true"
          skip-commit: "false"
          skip-tag: "true"
          skip-bump: "true"
          fallback-version: "${{ steps.tag_info.outputs.version }}"

      - name: Fix changelog and commit
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          # Add main heading if it doesn't exist
          if ! grep -q "^# Changelog" docs/reference/changelog.md; then
              {
              echo "# Changelog"
              echo ""
              echo "All notable changes to godi are documented here. This project follows [Semantic Versioning](https://semver.org/) and uses [Conventional Commits](https://www.conventionalcommits.org/) for automatic versioning."
              echo ""
              cat docs/reference/changelog.md
              } > docs/reference/changelog.md.tmp
              mv docs/reference/changelog.md.tmp docs/reference/changelog.md
          fi

          # Replace h1 version headers with h2
          sed -i 's/^# \[\([0-9]\)/## [\1/g' docs/reference/changelog.md

          # Commit all changes
          git add docs/reference/changelog.md version.json
          git commit -m "chore(release): ${{ steps.changelog.outputs.tag }} [skip ci]

          - Update changelog
          - Bump version"

          # Push changes
          git push origin HEAD:main

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_info.outputs.current_tag }}
          name: ${{ steps.tag_info.outputs.current_tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Create release branch
        run: |
          git checkout -b release/${{ steps.tag_info.outputs.current_tag }}
          git push origin release/${{ steps.tag_info.outputs.current_tag }}
